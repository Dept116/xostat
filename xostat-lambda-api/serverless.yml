org: xostat
app: xostat-lambda-api
service: xostat-lambda-api

provider:
  name: aws
  runtime: python3.8
  region: us-east-2
  stage: ${opt:stage, 'dev'}
  environment:
    DYNAMODB_TABLE: xodat
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:BatchWriteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/sk-pk-index"
plugins:
  - serverless-offline
  - serverless-dynamodb-local
custom:
  serverless-offline:
    host: localhost
    port: 3000
functions:
  uploadMatch:
    handler: controllers/upload.upload_matches
    description: upload a list of matches to xodat
    memorySize: 2048
    timeout: 90
    events:
      - http:
          path: /upload
          method: post
          cors: false
          request:
            schemas:
              application/json:
                schema: ${file(schema/uploadSchema.json)}
                name: UploadModel
                description: "Validation for uploading match"
  getUploadRecords:
    handler: controllers/profile.get_upload_records
    events:
      - http:
          path: /player/{id}
          method: get
          cors: true
  getUserProfile:
    handler: controllers/profile.get_user_totals
    events:
      - http:
          path: /profile/{id}
          method: get
          cors: true
  getUserTotals:
    handler: controllers/profile.get_user_totals_from_history
    events:
      - http:
          path: /player_totals/{id}
          method: get
          cors: true
  updateStaticElements:
    handler: controllers/load_static_assets.update_item_definitions
    # timeout: 600
    events:
      - http:
          path: /static
          method: get
          cors: true
